
name: FastAPI CI/CD Pipeline

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: 3.12

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Run Tests with Pytest
        run: pytest

  deploy:
    name: Deploy to AWS EC2
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: 3.12

      - name: Set up SSH Private Key
        run: |
          echo "${{ secrets.EC2_PRIVATE_KEY }}" > private_key
          chmod 600 private_key

      - name: SSH into EC2 and Deploy
        env:
          EC2_USER: ubuntu  # Or ec2-user, depending on your setup
          EC2_IP: ${{ secrets.EC2_IP }}
        run: |
          ssh -o StrictHostKeyChecking=no -i private_key ${EC2_USER}@${EC2_IP} << 'EOF'
            # Update and install Docker if not installed (idempotent)
            sudo apt update -y  # -y to automatically accept prompts
            sudo apt install -y docker.io

            # Ensure Docker service is running
            sudo systemctl enable docker  # Enable on boot
            sudo systemctl restart docker  # Restart to apply changes
            sudo rm -rf app
            mkdir app
            sudo chown ${EC2_USER}:${EC2_USER} app
            git clone https://github.com/johnafariogun/test
            mv test/* app/
            sudo rm -rf test
            cd app
            

            

            # Build Docker image (with a tag)
            sudo docker build -t fastapi-app:latest .

            # Run the new container (expose port 80, map volumes if needed)
            sudo docker run -d -p 80:80 fastapi-app:latest

            # Verify Deployment (Optional - but recommended)
            curl -i 127.0.0.1:80/docs
          EOF


      - name: Clean up SSH Key
        if: always() # Always run cleanup even if previous steps fail
        run: rm -f private_key

